//Скрипт для бекапа БД 1с и оповещения
//

#Использовать 1commands
#Использовать InternetMail
#Использовать messenger
#Использовать v8runner
#Использовать fs
#Использовать progbar


Перем КаталогДляПроверки;
Перем ГлубинаДней;
Перем КаталогРезервныхКопий;
Перем КаталогPgDump;
Перем АдресСервераSQL;
Перем ПользовательSQL;
Перем ПарольSQL;
Перем ИмяБазыSQL;
Перем ЛогФайл;
Перем ЛогФайлPg_Dump;
перем ЗаписьЛога;
Перем СтепеньСжатияАрхиваSQL;

Перем Пользователь1С;
Перем ПарольПользователя1С;
Перем ИмяСервера1С;
Перем ИмяБазы1С;
Перем ПутьКБазе1с;

Перем мТелеграмм;
Перем БотТокен;

Перем ПрофильПочта;

Перем Путь7z;


//Служебные 
 
Процедура ИнициализироватьНастройки()
	
	//ПодключитьВнешнююКомпоненту("/InternetMail/bin/MailComponent.dll");

	
	КаталогРезервныхКопий = "C:\pg_backup";
	ЛогФайл = "C:\pg_backup\Log.txt"; //
	ЛогФайлPg_Dump = "C:\pg_backup\Log_pg_dump.txt";
	КаталогPgDump = "C:\Program Files (x86)\pgAdmin 4\v2\runtime\pg_dump.exe"; 
	АдресСервераSQL = "psql.s-con.site";
	ПользовательSQL = "postgres"; 
	УстановитьПеременнуюСреды("PGPASSWORD","JLl23094jr");
	УстановитьПеременнуюСреды("PGPASSFILE ","C:\pg_backup\pgpass.conf");
	
	//ПарольSQL = "JLl23094jr";//в конфиге постгреса стоит trust для этого ip
	ИмяБазыSQL = "1c-steelk-main";
	СтепеньСжатияАрхиваSQL = 4;
	/////////////////////////////////////////////////////////////////////////////////////////////
	КаталогДляПроверки = "C:\хлам";
	ГлубинаДней = 3;
	
	////////////////////////////////////////////////////////////////////////////////////////////
	
	ЗаписьЛога = Новый ТекстовыйДокумент;
	
	
	
	
	
	Путь7z = "C:\Program Files\7-Zip\7z.exe" 
	
КонецПроцедуры


Процедура НайтиПоследниеФайлы(Знач КаталогПоиска,ШаблонРасширение)
	ТекДата = ТекущаяДата();
	СписокФайлов = НайтиФайлы(КаталогПоиска,ШаблонРасширение,Истина);
	
	ТекстПисьма = "";
	ТекстФайлы = "";
	Аларм = Ложь;
	ДатаПоследнего = ТекДата - (365*86400);
	ТекстПисьма = "Внимание !!!! Файл старше "+ГлубинаДней + " дней "+Символы.ПС;
	//ТекстПисьма = ТекстПисьма +""+ Символы.ПС; 
	Для Каждого ТекФайл Из СписокФайлов Цикл
		Если Не ТекФайл.ЭтоКаталог() Тогда
			ДатаИзменен = ТекФайл.ПолучитьВремяИзменения();
			
			Если ДатаИзменен > ДатаПоследнего Тогда
				ДатаПоследнего = ДатаИзменен;
			КонецЕсли;
			
			Разница = Окр((ТекДата - ДатаПоследнего)/86400,2);
			Если Разница > ГлубинаДней Тогда
				Сообщить(ТекФайл.Имя  + " изменен " + ДатаИзменен);							
				ТекстФайлы = Символы.ПС + ТекстФайлы + ТекФайл.Имя  + " изменен " + ДатаИзменен + Символы.ПС;
			КонецЕсли;	 	
		КонецЕсли;
	КонецЦикла;	
	
	
	Разница = Окр((ТекДата - ДатаПоследнего)/86400,2);
	
	Если Разница > ГлубинаДней Тогда
		Сообщить(Разница);
		Аларм = Истина;
	КонецЕсли;				
	
	Если Аларм Тогда			
		ТекстПисьма = ТекстПисьма + Символы.ПС + ТекстФайлы;
	КонецЕсли;	 
	
	Если Аларм Тогда
		ОтправитьПисьмоОповещение("Проверка файлов",ТекстПисьма);
		Сообщить("ок");
	КонецЕсли;	
	
	
КонецПроцедуры	


Процедура ЗаписатьВЛог(Знач ФайлЛога,Знач ТекстЗаписи)
	
	Попытка	
		ФайлЛ = Новый Файл(ФайлЛога);
		Если ФайлЛ.Существует() Тогда
			ЗаписьЛога = Новый ЗаписьТекста;
			ЗаписьЛога.Открыть(ФайлЛога,,,Истина,);
			// ЗаписьЛога.ДобавитьСтроку(ТекстЗаписи);
			// ЗаписьЛога.Записать(ФайлЛога,КодировкаТекста.UTF8);
			ЗаписьЛога.ЗаписатьСтроку(ТекстЗаписи);
			ЗаписьЛога.Закрыть(); 	
		КонецЕсли;
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура ОтправитьПисьмоОповещение(Знач ТемаПисьма,Знач СтрокиПисьма)
	
	ПрофильПочта = Новый ИнтернетПочтовыйПрофиль;
	
	ПрофильПочта.АдресСервераSMTP    = "smtp.yandex.ru";
	ПрофильПочта.ПользовательSMTP    = "mirco.alarm@yandex.ru";
	ПрофильПочта.ПарольSMTP          = "RG47tyuzx";
	ПрофильПочта.ИспользоватьSSLSMTP = Истина;
	
	
	ПрофильПочта.АдресСервераPOP3    = "pop.yandex.ru";
	ПрофильПочта.ИспользоватьSSLPOP3 = Истина;
	ПрофильПочта.Пользователь        = "mirco.alarm@yandex.ru";
	ПрофильПочта.Пароль              = "RG47tyuzx";
	
	
	
	Сообщение = Новый ИнтернетПочтовоеСообщение;
	Сообщение.Получатели.Добавить("mirco.alarm@bk.ru");
	Сообщение.ОбратныйАдрес.Добавить("mirco.alarm@yandex.ru");
	Сообщение.Отправитель = "mirco.alarm@yandex.ru";
	Сообщение.Тема        = ТемаПисьма;
	Текст = СтрокиПисьма;
	
	Сообщение.Тексты.Добавить(Текст, ТипТекстаПочтовогоСообщения.ПростойТекст);
	
	Почта = Новый ИнтернетПочта;
	Почта.Подключиться(ПрофильПочта, ПротоколИнтернетПочты.POP3);
	Почта.Послать(Сообщение, , ПротоколИнтернетПочты.SMTP);
	
КонецПроцедуры


Процедура ОтправитьВтелеграмБот(Знач ТестСообщения)
	Сообщение = "<b>"+ ТестСообщения+ "</b>"; //сообщение как html
	мТелеграмм.ОтправитьСообщение("telegram", "-***169", Сообщение, , "html");
КонецПроцедуры

Функция ДатаАрхиваСтрокой(ТолькоДень = Ложь)
	
	ГодЛ = Строка(Год(ТекущаяДата())); 
	МесяцЛ = Строка(Месяц(ТекущаяДата()));
	ДеньЛ = Строка(День(ТекущаяДата()));
	ЧасЛ = Строка(Час(ТекущаяДата()));
	МинутаЛ = Строка(Минута(ТекущаяДата()));
	Если ТолькоДень Тогда
		ДатаАрхива = ГодЛ + "-" + МесяцЛ + "-" + ДеньЛ;  
	Иначе
		ДатаАрхива = ГодЛ + "-" + МесяцЛ + "-" + ДеньЛ + "_" + ЧасЛ + "-" + МинутаЛ;  
	КонецЕсли;
	
	Возврат ДатаАрхива;
	
КонецФункции

Функция ПутьКФайлу_1cestart()
	
	ДатаПоследнего = ТекущаяДата() - (365*86400);
	ФайлЗапуска = Неопределено;
	
	СИ = Новый СистемнаяИнформация();
	Если СИ.Это64БитнаяОперационнаяСистема Тогда
		
		файлProgramFiles = Новый Файл("C:\Program Files (x86)\1cv8\common\1cestart.exe");	
		Если файлProgramFiles.Существует() Тогда
			ФайлЗапуска = "C:\Program Files (x86)\1cv8\common\1cestart.exe";
		Иначе
			файлProgramFiles = Новый Файл("C:\Program Files (x86)\1cv82\common\1cestart.exe");
			Если файлProgramFiles.Существует() Тогда
				ФайлЗапуска = "C:\Program Files (x86)\1cv82\common\1cestart.exe";
			Иначе
				Сообщить("Не найдена платформа 1с !");				
			КонецЕсли;	
		КонецЕсли;
		
		
	Иначе
		
		файлProgramFiles = Новый Файл("C:\Program Files\1cv8\common\1cestart.exe");	
		Если файлProgramFiles.Существует() Тогда
			ФайлЗапуска = "C:\Program Files\1cv8\common\1cestart.exe";
		Иначе
			файлProgramFiles = Новый Файл("C:\Program Files\1cv82\common\1cestart.exe");
			Если файлProgramFiles.Существует() Тогда
				ФайлЗапуска = "C:\Program Files\1cv82\common\1cestart.exe";
			Иначе
				Сообщить("Не найдена платформа 1с !");				
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ФайлЗапуска;
	
КонецФункции



//Основные

Процедура RUN()
	
	

	ИнициализироватьНастройки();
	
	АрхивацияPostgreSQL();
	//Архивация1с("srv1c.s-con.site","steelk-main","Администратор","111",);
	//НайтиПоследниеФайлы(КаталогДляПроверки,"*.backup");
	  //БекапКаталога("\\files.s-con.site\Обмен файлами","C:\хлам","Обмен",);
	  //БекапКаталога("\\files.s-con.site\Общие-Тамбов","C:\хлам","Общие-Тамбов",);
	  //БекапКаталога("\\files.s-con.site\Общие","C:\хлам","Общие",);
	  //БекапКаталога("\\files.s-con.site\Проекты Halber","C:\хлам","Проекты Halber",);
//сообщить("ок")
	
КонецПроцедуры

Процедура АрхивацияPostgreSQL()
		
	КомандаЗапуска = "pg_dump.exe -h " + АдресСервераSQL +
	//" -U " + ПользовательSQL +
	//" -W" +
	//" -U " + ПользовательSQL + ?(ПарольSQL=""," --no-password"," -W ") +
	" -U " + ПользовательSQL + " --no-password" +
	" --verbose" +
	" -E UTF8 " +  "--format=c" + " -Z " + СтепеньСжатияАрхиваSQL +
	" --section pre-data" + " --section data" + " --section post-data" + 
	" -d " + ИмяБазыSQL +
	" -f "+ КаталогРезервныхКопий +"\"+ ДатаАрхиваСтрокой() + "_" + ИмяБазыSQL + ".backup";
	
	ЗаписатьВЛог(ЛогФайл,"Начало бекапа SQL " + ТекущаяДата());
	
	
	
	// ЗначениченияПеременных = Новый Соответствие;
	// ЗначениченияПеременных.Вставить("pgpassword",ПарольSQL);

	// УстановитьПеременнуюСреды("pgpassword",ПарольSQL);

	// ПроцессА = СоздатьПроцесс(КомандаЗапуска,,,,,ЗначениченияПеременных);
	// ПроцессА.Запустить();
	Команда = Новый Команда;
	Команда.УстановитьКоманду("set pgpassword="+ПарольSQL);
	КодВозврата = Команда.Исполнить();
	ВыводКоманды = Команда.ПолучитьВывод();
	Сообщить(ВыводКоманды);
	
	Команда = Новый Команда;
	Команда.УстановитьКоманду(КомандаЗапуска);
	КодВозврата = Команда.Исполнить();	
	ВыводКоманды = Команда.ПолучитьВывод();
	ЗаписатьВЛог(ЛогФайлPg_Dump,ВыводКоманды);
	Сообщить(ВыводКоманды);
	Сообщить(КодВозврата);
	
	
	ЗаписатьВЛог(ЛогФайл,"Конец бекапа SQL " + ТекущаяДата());
КонецПроцедуры


Процедура БекапКаталога(ИсходныйКаталог,ЦелевойКаталог,ИмяАрхива,МаскаФайлов)
	
	КаталогДляСжатия = ИсходныйКаталог;
	
	
	Если ФС.КаталогСуществует(ИсходныйКаталог) Тогда
		Если ФС.КаталогСуществует(ЦелевойКаталог) Тогда
			//если  это сетевой каталог - Копируем в целелой во временную папку
			
			КаталогДляСжатия = ЦелевойКаталог + "\temp_copy\";
			ФС.ОбеспечитьПустойКаталог(КаталогДляСжатия);
			ФС.КопироватьСодержимоеКаталога(ИсходныйКаталог,КаталогДляСжатия);
			

			ИмяФайлАрхива = ЦелевойКаталог + "\" + ДатаАрхиваСтрокой(Истина) + "\" + ДатаАрхиваСтрокой() + "_" + ИмяАрхива + ".7z";
			
			Если МаскаФайлов <> Неопределено Тогда
				мФайлы = МаскаФайлов;
			Иначе
				мФайлы = "*";
			КонецЕсли;	
			КомандаЗапуска = """" + Путь7z + """" + " a" + " -pGfhjkm123#" + " -r" + " -y" +" -mx5" + " " + ИмяФайлАрхива +" " +  КаталогДляСжатия + МаскаФайлов;
						Команда = Новый Команда;
			Команда.УстановитьКоманду(КомандаЗапуска);
			Сообщить(КомандаЗапуска);
			
			
			КодВозврата = Команда.Исполнить();
			Сообщить(КодВозврата);
			ВыводКоманды = Команда.ПолучитьВывод();
			ЗаписатьВЛог(ЛогФайлPg_Dump,ВыводКоманды);
			Сообщить(ВыводКоманды);
			
		Иначе
			Сообщить("Не найден целевой каталог " + ЦелевойКаталог);
		КонецЕсли;
	Иначе
		Сообщить("Не найден исходный каталог " + ИсходныйКаталог);
	КонецЕсли;	
	
	
КонецПроцедуры

Процедура Архивация1с( ИмяСервера1С, ИмяБазы1С,Пользователь1С,ПарольПользователя1С,ПутьКБазе1с)
	
	
	
	ФайлЗапуска1с = ПутьКФайлу_1cestart();
	
	ИмяБекапа = КаталогРезервныхКопий + "\" + ДатаАрхиваСтрокой(Истина) + "\" + ДатаАрхиваСтрокой() + "_" + ИмяБазы1С + ".dt";
	
	КомандаЗапуска = """" + ФайлЗапуска1с + """ " +  "CONFIG /S " + ИмяСервера1С + "\" + ИмяБазы1С +
	" /N " +  Пользователь1С + " /P " +  ПарольПользователя1С ;
	//" /DumpIB " + ИмяБекапа ;
	
	Команда = Новый Команда;
	Команда.УстановитьКоманду(КомандаЗапуска);
	Сообщить(КомандаЗапуска);
	
	
	КодВозврата = Команда.Исполнить();
	Сообщить(КодВозврата);
	ВыводКоманды = Команда.ПолучитьВывод();
	ЗаписатьВЛог(ЛогФайлPg_Dump,ВыводКоманды);
	Сообщить(ВыводКоманды);
	
	
	
КонецПроцедуры

////++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

//
//Запуск 
RUN();

